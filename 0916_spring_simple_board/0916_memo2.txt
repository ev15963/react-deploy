 	 ~.jar
 	 프레임워크 개발시 사용
 	 
1. ~.jar -> eclipse
2. Maven elicpse plug

STS

web.xml : 웹 요청사항이 들어왔을 때 servlet class를 찾아주는역할

컨트롤러역할을 하는 서블릿의 이름 및 요청경오를 지정

요청이 들어왔을 때, 어떻게 처리할 것인가

<servlet> 태그와 <servlet-mapping> 한 쌍
<servlet-name> 태그와 <servlet-class> 한 쌍
<servlet-name> 태그와 <url-pattern> 한 쌍

웹 요청사항이 들어오면
1) url-pattern을 찾는다
2) servlet-mapping의 servlet-name을 찾는다.
3) servlet의 servlet-name을 찾는다.
4) servlet의 servlet-class를 찾는다.

board-servlet.xml <= HandleMapping에게 컨트롤러 알려주는 역할
<!-- DB접속 방법 -> JNDI 방법 -->

	<bean id="boardDAO" class="board.dao.BoardDAO" />
	BoardDAO 객체를 만든 다음에 id명을 boardDAO를 지정

class를 통해서 id로 생성
	class를 name으로 자동 매핑
	class 내부에 멤버변수명이 dao라는 프로퍼티
	set property 개념

	boardDAO 객체로 전달


	<!-- 1. 글 목록 보기 -->

	<bean name="/list.do"
		class="board.controller.ListActionController">
		
	~.list.do
		 ↓
	dispatherServlet
	
	handlemapping에게 물어봄 <!-- 컨트롤러를 알려주는 역할 -->
	

	<bean name="/index.do"
		class="org.springframework.web.servlet.mvc.ParameterizableViewController">
		
		
		/////////////////////
		
		
WriteActionController

	<!-- 2. 컨트롤러(=모델2의 액션 클래스) 글쓰기화면 페이지 이동 -->

	<!-- ParameterizableViewController의 viewName 속성값을 설정하면, 콜백메서드인 handleRequestInternal() 
		에 의해 지정된 뷰명을 가지는 ModelAndView 객체를 돌려준다. -->

	<bean name="/writeui.do"
		class="org.springframework.web.servlet.mvc.ParameterizableViewController">

		​

	</bean>

	​

	<!-- 3. 글쓰기(글 수정하기와 거의 유사) DB연결해서 -->

	<bean name="/write.do"
		class="board.controller.WriteActionController">

		​

	</bean>
	
	<!-- 4. 글 상세보기 -->

	<bean name="/retrieve.do"
		class="board.controller.RetrieveActionController">
	</bean>

	<!-- 5.글 수정하기 -->

	<bean name="/update.do"
		class="board.controller.UpdateActionController">
		
		/update.do -> UpdateActionController 에게 지시
	
	
	<!-- 6.글 삭제하기 -->

	<bean name="/delete.do"
		class="board.controller.DeleteActionController">

	</bean>

	​

	<!-- 7.글 검색하기 -->

	<bean name="/search.do"
		class="board.controller.SearchActionController">

		
	</bean>
	
	<!-- viewResolver(위치, 이동할 페이지 지정) -->

	<bean id="viewResolover"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">

	</bean>
	
	BoardDTO : database
	BoardCommand.java : BOARD
	
	 viewResolver <= 위치, 이동할 페이지 지정해주는 역할(spring에서 클래스 지원)	


http:// localhost:3000/simplespringboard/

list.do	-> web.xml

write.do

<selvet-mapping>
<url-partten>

????????????


list.do -> dispatchServlet "list.do"

board-servlet.xml

Handle list.do Mapping => dispaterServelt 

접속객체 dao

board.controller.ListActionController

멤버변수명이 dao property 

maxActive= 몇개를 활성화
maxIdle= 최대 몇개

InitialContext lookup //data connection pool 방식

ListActionController.java

implement (인터페이스 상속)

conection pool  : k,v을 생성


5교시

작업순서

dto 생성
dao 생성

viewesolver <= 위치, 이동할 페이지 지정해주는 역할(spring에서 클래스 지원)

Spring의 가장 기본적인 개념
 : 의존성 주입(DI)
의존성 - 의존 관계
주입 - 내부가 아니라 외부에서 객체를 생성해서 넣어주는 것
의존성 주입 - 내부에서 만든 변수를 외부에서 넣어주게 한다.
-대규모 프로젝트
-유지보수 관리

Context.xml
<?xml version="1.0" encoding="UTF-8" ?>

<Context>						//InitialContext(Context) dao 일때 수정가능 인터페이스 
		<Resource 				//java:comp/env/
			name="jdbc/orcl" 			//JNDI이름(이름은 변경 가능)
			auth="container" 			//웹 컨테이너 : 수정불가능 = 커넥션 풀의 소유주
			type="javax.sql.DataSource"		//반환 타입 데이터 소스 반환타입
			username="lsw" 			//사용자 계정 (자유)
			password="1234"			//비밀번호
			driverClassName="oracle.jdbc.driver.OracleDriver"		//디비가 MYSQL로 바뀌면 변경가능
			factory="org.apache.commons.dbcp.BasicDataSourceFactory"	//데이터 소스객체를 만들어주는 공장
			url="jdbc:oracle:thin:@localhost:1521:XE" 			//데이터베이스가 바귀면 해당사항도 바뀜
			maxActive="20" 						//활성화 Connection 객체 최대 갯수 DAO 생성자코드와 이 두부분은 같이 묶여야한다.
			maxIdle="10">						//사용  Connection 객체 최대 갯수 maxIdle
	</Resource>
</Context>

이니셜 클래스는 생성자를 받는 클래스


gosemffkqalvlddms 빈태그 간

 명시되있는 클래스를 알려줌

dispatcher 쪽으로

빈태그는 list

board-servlet.html list action servlet

board action 
/list.do

implements Controller : 자동으로 주입

<!-- viewResolver(위치, 이동할 페이지 지정) -->
	<bean id="viewResolover"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.InternalResourceView"/>
		<property name = "prefix" value="/"/> //컨트롤러가 지정한 경로명
		<property name = "suffix" value="/jsp"/> //suffix 어떤 파일인지
		/list.jsp http://~/simple_spring_borad list.jsp
	</bean>
	

board-servlet.xml -viewResolver

viewClass, prefix, suffix는 viewResolver의 멤버변수이므로 수정불가
prefix = controller가 지정한 위치(경로명)
suffix = 어떤 타입인지

	<bean name="/index.do"
			class="org.springframework.web.servlet.mvc.ParameterizableViewController">
		<property name="viewName" value="list"></property>
	</bean>
	
	<bean id="boardDAO" class="board.dao.BoardDAO" /> <!-- ListActionController --> 
	
	<bean name="/list.do" class="board.controller.ListActionController"> <!-- dto에게 의존성 주입 -->
		<property name ="dao">
			<ref bean="boardDAO"/>
		</property>
	</bean>
	
	<bean name="/writeui.do"
		class="org.springframework.web.servlet.mvc.ParameterizableViewController">
	</bean>

	
	<bean name="/write.do"
		class="board.controller.WriteActionController">
	</bean>

	
	<bean name="/retrieve.do"
		class="board.controller.RetrieveActionController">
	</bean>

	<bean name="/update.do"
		class="board.controller.UpdateActionController">
	</bean>

	
	<bean name="/delete.do"
		class="board.controller.DeleteActionController">
	</bean>

	
	<bean name="/search.do"
		class="board.controller.SearchActionController">
	</bean>

	
	<bean id="viewResolover"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.InternalResourceView"/>
		<property name = "prefix" value="/"/>
		<property name = "suffix" value="/jsp"/>
	</bean>
	
	
오류메시지
java.lang.IllegalArgumentException


1.xml 파일은 띄어쓰기 주의

<? ?> --------------</>
 <>
 <>

 
 나머지 태그(index 실행시) 오류
 
 2. 1. writeui.do
 debug 체크파일(log4j.properties)의 저장위치가 잘못되어 디버그 내용이 안나오면..(xml파일은 위에서 아래로 실행됌)
   아직 만들지 않은 컨트롤러 파일은 잘라내고 실행을 해야한다.
  1.   Apach Tomcat
 debug 체크파일(log4j.properties)의 
    debug --- create ---- list.do
    	      Finish ---- list.do
    	     creating -- writeui.do
    	     Factory -> Destroying
    		  
   사용되지 않은 부분 제거 하고 실행해보기
   
   
    2. 생성자 오류 (ListActionContrlooer)
 Datasource를 생성자 쪽에 만들었을 경우 Datasource에 주입이 안돼서 발생
 
 
    3. viewResolver에 prefix, suffix 변수를 만들지 않았을 경우

index.do
    	<property -> setproperty
    	

 Dispatcher servlet
 
 ViewResovler

----------------------------

http://localhost:9000/simple_spring_board/
	톰캣서버		프로젝트

톰캣서버가 web.xml 문서를 읽는다
<web-app> 태그를 읽는다 (<web-app> => web application 객체로 완성)
Server.xml 문서에서 Context파일 읽어낸다.
<servlet> 태그를 읽는다. (servlet 객체로 완성시키기 위해)
<servlet-mapping> 태그를 읽는다.

board-servlet.xml 문서

defaultHandlerMapping
boardDAO
ViewResolved

위 3개 필요

 
 