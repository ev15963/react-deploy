//참고 : 현재까지 이벤트 함수 종류
      
  
click(자동 호출 함수)
 : 마우스 왼쪽 버튼 클릭 (모든 요소 사용가능)
 
change(자동 호출 함수)
 : 값에 변화가 일어났을 때 (주로 <select>)
 
keyup(자동 호출 함수)
 : 키보드가 눌렀다 때지면
 
keydown(자동 호출 함수)
 : 키보드가 눌러지면
 
mouseout(자동 호출 함수)
 : 해당 요소에 마우스 커서가 올라가면 (모든 요소 사용가능)
 
mouseover(자동 호출 함수)
 : 해당 요소로부터 마우스 커서가 빠져나가면 (모든 요소 사용가능)
 
hover()
 : mouseover()와 mouseout() 기능을 포함 
 (모든 요소 사용가능)
 
bind('이벤트명', 자동호출함수)
 : 이벤트를 동적으로 부여 
 (모든 요소 사용가능)
 
one('이벤트명', 자동호출함수)
 : 하당 이벤트 1회 가능 (모든 요소 사용가능)
 
toggle(자동호출 함수. 자동호출 함수)
 : 한개의 요소에 두가지 기능 실행(ON/OFF)
 
attr('속성명', '속성값') : 설정 가능



01Each.html

attr({어트리뷰트 : 값}); : id를 변경

ex) $(this).attr({ //attr({어트리뷰트:값});})
'id' : "para-" + index //id 속성 동적으로 부여

index : 0 부터 시작

02JQueryIndexer.html

.each()
 : 선택한 요소가 여러 개일 때 각각에 대하여 반복하여 함수를 실행
 for문과 비슷
 
for (var i=0; i<headers.length; i++) {
alert($(headers[i].html()));

$('h3').each(
function(index) {
	alert($(this).html());
	});
});

01HelloWorld.html

addClass("bg");

class = bg를 추가 (태그 같이 적용할 때 등)

div 태그에 직접 CSS적용
<div style="background-color: Yellow;" onclick="alert('안녕');">

hw라는 id속성으로 가져와 그것에 bg CSS 클래스 적용
$('#hw').click(function () {
	alert('안녕');
	$(this).addclass('hw');
});

02Selector.html

id 속성이 myFavorites인 것의 자식 요소중 li에 CSS클래스 적용
$("#myFavorites > li").addClass("horizontal");

id 속성에 대해서 직접 접근
jQuery('#jquery').click(function() { alert('jQuery'); });


03RegSelector.html 정규표현식 셀렉터
$("a[href*='dotnet']") 8
 : dotnet이라는 단어가 들어가는 링크
 
$('a[href$="aspx"]') 4
 : aspx로 끝나는 링크
 
a[href^='mailto:'] 6
 : mailto:로 시작하는 링크
 
 04EvenOld.html
 $('tr:odd') : 홀수 번째 tr 태그
 $('tr:even') : 짝수 번째 tr 태그